package com.example.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository. Which is auto-generated by Spring, we will use it to handle the data
    UserRepository userRepository;
    // ez is jó lenne: CrudRepository<User, Integer> userRepository;

    @GetMapping(path="/create")
    public @ResponseBody String create() {
        User n = new User();
        n.setName("Kovács Antal");
        n.setEmail("kovacs@adat.hu");
        userRepository.save(n);
        n = new User();
        n.setName("Nagy Péter");
        n.setEmail("nagy@adat.hu");
        userRepository.save(n);
        n = new User();
        n.setName("Tóth Éva");
        n.setEmail("toth@adat.hu");
        userRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/read")
    public @ResponseBody Iterable<User> read() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path="/update")
    public @ResponseBody String update(){
        String str = "Rekordok száma:" + userRepository.count();
        // Módosítsuk az ID=1-es rekordot:
        User user = userRepository.findById(1).get();
        user.setName("Kovács János");
        userRepository.save(user);
        str += " Módosítva az ID=1";
        return str;
    }

    @GetMapping(path="/delete")
    public @ResponseBody String delete(){
        // Töröljük az ID=3-as rekordot:
        userRepository.deleteById(3);
        return " Törölve az ID=3";
    }
}
